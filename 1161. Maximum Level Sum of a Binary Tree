/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int levelOrder(TreeNode* root){
        int ans=-1;
        if(root==NULL){
            return 0;
        }
        int level=1;
        queue<TreeNode*>q;
        q.push(root);
        int maxi=INT_MIN;
        while(!q.empty()){
            int size=q.size();
            int sum=0;
            while(size--){
                TreeNode* top=q.front();
                q.pop();
                sum+=top->val;
                if(top->left!=NULL){
                    q.push(top->left);
                }
                if(top->right!=NULL){
                    q.push(top->right);
                }
            }
            if(maxi<sum){
                maxi=sum;
                ans=level;
            }
            level++;
        }
        return ans;
    }
    int maxLevelSum(TreeNode* root){
        return levelOrder(root);
    }
};
