/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode *root, string prev, int count, int& ans){
        if(root == NULL) {
            ans = max(ans, count);
            return;
        }
        ans = max(ans, count);
        if(prev == "left"){
            solve(root->right, "right", count+1, ans);
            solve(root->left, "left", 0, ans);
        } else {
            solve(root->left, "left", count+1, ans);
            solve(root->right, "right", 0, ans);
        }
        
    }
    int longestZigZag(TreeNode* root) {
        int ans = INT_MIN;
        solve(root->left, "left", 0, ans);
        solve(root->right, "right", 0, ans);
        return ans; 
    }
};
